# MySQL
mysql:
  user: frankotip
  pass: frankotip123
  host: localhost
  port: 3306
  db: frankotip

# Reddit
reddit:
  user: frankotip
  pass: frankotip123
  batch-limit: 1000
  useragent: /u/frankotip
  scan:
    my-subreddits: false
    these-subreddits: ["all"]
    ignore-subreddits: ["test"]
  help-url: http://www.reddit.com/r/frankotip/wiki/index
  comments:
    verify: true
    pending: false
    expired: false
    declined: false
  messages:
    sorry: true
  banned_users:
#    method: subreddit
#    subreddit: frankotip
    method: list
    list: [frankotip, bitcointip, altcointip]
  stats:
    enabled: false
    subreddit: frankotip
    page: stats
    url: http://www.reddit.com/r/frankotip/wiki/stats
    sql:
      01_total_tipped_usd:
        name: "Total Accepted Tips (USD)"
        desc: "Total value of all tips given and accepted in USD (default) fiat"
        type: line
        query: "SELECT SUM(fiat_val) AS total_usd FROM t_action WHERE type = 'givetip' AND state = 'completed' AND fiat = 'usd'"
      02_total_tips_expired_and_declined:
        name: "Total Expired and Declined Tips (USD)"
        desc: "Total value of all tips given that weren't accepted (expired or declined) in USD (default) fiat"
        type: line
        query: "SELECT SUM(fiat_val) AS total_usd FROM t_action WHERE type = 'givetip' AND state = 'expired' OR state = 'declined' AND fiat = 'usd'"
      03_total_users_registered:
        name: "Total Users Registered"
        desc: "Number of registered users"
        type: line
        query: "SELECT COUNT(username) AS total_users FROM t_users"
      03a_total_tippers:
        name: "Total Tippers"
        desc: "Number of users who tipped at least once"
        type: line
        query: "SELECT COUNT(from_user) AS total_tippers FROM (SELECT DISTINCT from_user FROM t_action WHERE type = 'givetip') AS t_distinct_action"
      04_total_tips:
        name: "Total Number of Tips"
        desc: "Total number of tips given (accepted, expired, and declined)"
        type: line
        query: "SELECT COUNT(msg_id) AS total_tips FROM t_action WHERE type = 'givetip' AND state = 'completed' OR state = 'expired' OR state = 'declined'"
      05_top_10_tippers:
        name: "Top 10 Tippers"
        desc: "Top 10 all-time tippers as determined by total USD/EUR (fiat) value of their tips."
        type: table
        query: "SELECT from_user, SUM(fiat_val) AS total_fiat FROM t_action WHERE type = 'givetip' AND state = 'completed' AND fiat IN ('usd', 'eur') GROUP BY from_user ORDER BY total_fiat DESC LIMIT 10"
      06_top_10_tips:
        name: "Top 10 Tips"
        desc: "Top 10 all-time tips as determined by their USD/EUR (fiat) value."
        type: table
        query: "SELECT from_user, to_user, fiat_val, coin, coin_val, msg_link FROM t_action WHERE type ='givetip' AND state = 'completed' AND fiat IN ('usd', 'eur') ORDER BY fiat_val DESC LIMIT 10"
      07_top_10_receivers:
        name: "Top 10 Receivers"
        desc: "Top 10 all-time tip receivers as determined by total USD/EUR (fiat) value of their received tips."
        type: table
        query: "SELECT to_user, SUM(fiat_val) AS total_fiat FROM t_action WHERE type = 'givetip' AND state = 'completed' AND fiat IN ('usd', 'eur') AND to_user IS NOT NULL GROUP BY to_user ORDER BY total_fiat DESC LIMIT 10"
      08_top_10_subreddits:
        name: "Top 10 Subreddits"
        desc: "Top 10 subreddits as determined by total USD/EUR (fiat) value of the tips given in it."
        type: table
        query: "SELECT subreddit, SUM(fiat_val) AS total_fiat FROM t_action WHERE type = 'givetip' AND state = 'completed' AND fiat IN ('usd', 'eur') GROUP BY subreddit ORDER BY total_fiat DESC LIMIT 10"
      09_total_by_coin:
        name: "Totals by Coin"
        desc: "Total coins tipped to date, per coin."
        type: table
        query: "SELECT coin, SUM(coin_val) AS total_coins, SUM(fiat_val) AS total_fiat FROM t_action WHERE type = 'givetip' AND state = 'completed' AND fiat IN ('usd', 'eur') GROUP BY coin ORDER BY coin ASC LIMIT 10"

# Other
misc:
  qr-service-url: 'https://chart.googleapis.com/chart?cht=qr&choe=UTF-8&chs=300x300&chl='
  sleep-seconds: 30
  expire-pending-hours: 48
  subtract-txfee: false
  exchange: vircurex
  encryptionpassphrase: 'ChangeAndRememberMe11'

# Regex
regex:
  amount:
    num: '([0-9]{1,9}(?:\.[0-9]{0,8})?)'
    keyword: '(all|flip|roll|upvote|pi|e|leet|quarter|half|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)'
  keywords:
    givetip: '(/u/frankotip|frankotip)'
    info: '(info)'
    register: '(register)'
    accept: '(accept)'
    decline: '(decline)'
    withdraw: '(withdraw)'
    history: '(history)'

# Amount keywords
kw:
   all: "float( self._FROM_USER.get_balance(coin=self._COIN, kind=('withdraw' if bool(self._TO_ADDR) else 'givetip')) - (self._CTB._config['cc'][self._COIN]['txfee'] if bool(self._TO_ADDR) and not self._CTB._config['misc']['subtract-txfee'] else 0.0) ) if self._FROM_USER.is_registered() and bool(self._COIN) else None"
   flip: "float( (self._CTB._config['cc'][self._COIN]['txmin']['givetip'] if bool(self._COIN) else 0.01) * float(randint(1,2)) )"
   roll: "float( (self._CTB._config['cc'][self._COIN]['txmin']['givetip'] if bool(self._COIN) else 0.01) * float(randint(1,6)) )"
   upvote: 0.1
   pi: 3.14159265
   e: 2.7182818
   leet: 1.337
   quarter: 0.25
   half: 0.5
   one: 1.0
   two: 2.0
   three: 3.0
   four: 4.0
   five: 5.0
   six: 6.0
   seven: 7.0
   eight: 8.0
   nine: 9.0
   ten: 10.0
   eleven: 11.0
   twelve: 12.0

# Logging
logging:
  info-log-filename: ctb-info.log
  debug-log-filename: ctb-debug.log

# Fiat
fiat:
  # USD
  usd:
    enabled: true
    unit: usd
    symbol: '$'
    name: US Dollar
    regex:
      units: (\$|usd)
  # EUR
  eur:
    enabled: true
    unit: eur
    symbol: '€'
    name: Euro
    regex:
      units: (€|eur)
  # GBP
  gbp:
    enabled: false
    unit: gbp
    symbol: '£'
    name: British Pound
    regex:
      units: (£|gbp)
  # JPY
  jpy:
    enabled: false
    unit: jpy
    symbol: '¥'
    name: Japanese Yen
    regex:
      units: (¥|jpy)
  # RUR
  rur:
    enabled: false
    unit: rur
    symbol: 'R'
    name: Russian Ruble
    regex:
      units: (r|rur)

# Cryptocoins
cc:
  # Franko
  btc:
    enabled: false
    unit: btc
    name: Bitcoin
    conf-file: '~/.franko/franko.conf'
    minconf:
      givetip: 1
      withdraw: 10
    txmin:
      givetip: 0.0001
      withdraw: 0.0002
    txfee: 0.0001
    walletpassphrase: mypass1
    explorer:
      address: 'http://frk.cryptocoinexplorer.com/'
      transaction: 'http://frk.cryptocoinexplorer.com/tx/'
    regex:
      address: '([1|3][1-9a-z]{20,40})'
      units: '(frk|franko|frankos)'

﻿# -*- coding: utf-8 -*-
